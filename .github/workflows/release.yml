name: Release and Build Docker
on:
  workflow_run:
    workflows: [Merge Dependabot Pullrequest]
    types:
      - completed
  push:
    branches:
      - main
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.extract_tag.outputs.tag }}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract base image tag
        id: extract_tag
        run: |
          BASE_TAG=$(grep -i '^FROM ' Dockerfile | head -1 | cut -d':' -f2-)
          echo "tag=$BASE_TAG" >> $GITHUB_OUTPUT
      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - name: Create GitHub Release
        run: |
          TAG_NAME=${{ steps.extract_tag.outputs.tag }}
          if git show-ref --tags --verify --quiet "refs/tags/${TAG_NAME}"; then
            git tag -d "$TAG_NAME"
            git push origin -d "$TAG_NAME"
            gh release delete "$TAG_NAME"
          fi
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"
          gh release create "$TAG_NAME" --title "$TAG_NAME"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ${{ github.repository }}:${{ needs.release.outputs.tag }}
            ${{ github.repository }}:latest
          cache-from: type=registry,ref=${{ github.repository }}:buildcache
          cache-to: type=registry,ref=${{ github.repository }}:buildcache,mode=max